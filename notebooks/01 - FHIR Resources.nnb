{
    "cells": [
        {
            "language": "markdown",
            "source": [
                "# FHIR resources "
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "## Create your first FHIR resource\n\nLet's create your first FHIR resource: a [Patient](http://hl7.org/fhir/R4B/patient.html)."
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "import { build } from \"@bonfhir/core/r4b\";\n\nlet patient = build(\"Patient\", {\n  name: [{ given: [\"Miles\"], family: \"Davis\" }],\n  gender: \"male\",\n});\n\n// Display the patient in the notebook\nconsole.log(JSON.stringify(patient, undefined, 2));"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "{",
                                "  \"name\": [",
                                "    {",
                                "      \"given\": [",
                                "        \"Miles\"",
                                "      ],",
                                "      \"family\": \"Davis\"",
                                "    }",
                                "  ],",
                                "  \"gender\": \"male\",",
                                "  \"resourceType\": \"Patient\",",
                                "  \"text\": {",
                                "    \"status\": \"generated\",",
                                "    \"div\": \"<div xmlns=\\\"http://www.w3.org/1999/xhtml\\\"><ul><li><span>Gender: </span>male</li><li><span>Name: </span><ul><li>Miles Davis</li></ul></li></ul></div>\"",
                                "  }",
                                "}",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "*As you can see, the `build` method creates new FHIR Resources, with the appropriate `resourceType` and [Narrative](https://www.hl7.org/fhir/narrative.html) generated for you.*"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "## Save the FHIR resource on the server"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "import { FetchFhirClient } from \"@bonfhir/core/r4b\";\n\n// Create a FHIR Client connected to the local FHIR Server\nconst client = new FetchFhirClient({\n  baseUrl: \"http://localhost:8103/fhir/R4/\",\n  auth: {\n    tokenUrl: \"http://localhost:8103/oauth2/token\",\n    clientId: \"f54370de-eaf3-4d81-a17e-24860f667912\",\n    clientSecret:\n      \"75d8e7d06bf9283926c51d5f461295ccf0b69128e983b6ecdd5a9c07506895de\",\n  },\n})\n\n// Create the patient\npatient = await client.create(patient);\nconsole.log(JSON.stringify(patient, undefined, 2));"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "{",
                                "  \"name\": [",
                                "    {",
                                "      \"given\": [",
                                "        \"Miles\"",
                                "      ],",
                                "      \"family\": \"Davis\"",
                                "    }",
                                "  ],",
                                "  \"gender\": \"male\",",
                                "  \"resourceType\": \"Patient\",",
                                "  \"text\": {",
                                "    \"status\": \"generated\",",
                                "    \"div\": \"<div xmlns=\\\"http://www.w3.org/1999/xhtml\\\"><ul><li><span>Gender: </span>male</li><li><span>Name: </span><ul><li>Miles Davis</li></ul></li></ul></div>\"",
                                "  },",
                                "  \"id\": \"ddc0b271-5b6d-4a8e-80d5-ec7f9c398555\",",
                                "  \"meta\": {",
                                "    \"versionId\": \"58b80efc-6531-473e-8d72-09ab2636f2ec\",",
                                "    \"lastUpdated\": \"2023-07-26T13:07:50.984Z\"",
                                "  }",
                                "}",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "Open http://localhost:3000/Patient to see the patients in the local FHIR Server.\n - use `admin@example.com`/`medplum_admin` to login"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "## Create an Organization, and reference it on the patient, and update the patient."
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "import { codeableConcept, reference } from \"@bonfhir/core/r4b\";\n\nlet organization = build(\"Organization\", {\n  name: \"Acme, Inc\"\n});\n\n// We can use the `save` method here, which is a shorthand for `create` or `update`.\norganization = await client.save(organization);\n\npatient = build(\"Patient\", {\n  ...patient,\n  // The `reference` helper builds a reference to another resource\n  managingOrganization: reference(organization),\n  // The `codeableConcept` helper builds a codeableConcept from one or several Coding(s)\n  maritalStatus: codeableConcept({\n    system: \"http://terminology.hl7.org/CodeSystem/v3-MaritalStatus\",\n    code: \"D\",\n    display: \"Divorced\"\n  }),\n});\npatient = await client.save(patient);\n\nconsole.log(JSON.stringify({ organization, patient }, undefined, 2));"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "{",
                                "  \"organization\": {",
                                "    \"name\": \"Acme, Inc\",",
                                "    \"resourceType\": \"Organization\",",
                                "    \"text\": {",
                                "      \"status\": \"generated\",",
                                "      \"div\": \"<div xmlns=\\\"http://www.w3.org/1999/xhtml\\\"><ul><li><span>Name: </span>Acme, Inc</li></ul></div>\"",
                                "    },",
                                "    \"id\": \"4cca86d1-e77f-459c-a510-dc2b0ece2949\",",
                                "    \"meta\": {",
                                "      \"versionId\": \"ed4dc76f-3c83-4992-a91f-55f2ed37b2b8\",",
                                "      \"lastUpdated\": \"2023-07-26T13:07:57.875Z\"",
                                "    }",
                                "  },",
                                "  \"patient\": {",
                                "    \"name\": [",
                                "      {",
                                "        \"given\": [",
                                "          \"Miles\"",
                                "        ],",
                                "        \"family\": \"Davis\"",
                                "      }",
                                "    ],",
                                "    \"gender\": \"male\",",
                                "    \"resourceType\": \"Patient\",",
                                "    \"text\": {",
                                "      \"status\": \"generated\",",
                                "      \"div\": \"<div xmlns=\\\"http://www.w3.org/1999/xhtml\\\"><ul><li><span>Gender: </span>male</li><li><span>Name: </span><ul><li>Miles Davis</li></ul></li></ul></div>\"",
                                "    },",
                                "    \"id\": \"ddc0b271-5b6d-4a8e-80d5-ec7f9c398555\",",
                                "    \"meta\": {",
                                "      \"versionId\": \"53cae557-c4b7-4916-803c-4990eb7de186\",",
                                "      \"lastUpdated\": \"2023-07-26T13:07:57.896Z\"",
                                "    },",
                                "    \"managingOrganization\": {",
                                "      \"reference\": \"Organization/4cca86d1-e77f-459c-a510-dc2b0ece2949\",",
                                "      \"type\": \"Organization\",",
                                "      \"display\": \"Acme, Inc\"",
                                "    },",
                                "    \"maritalStatus\": {",
                                "      \"coding\": [",
                                "        {",
                                "          \"system\": \"http://terminology.hl7.org/CodeSystem/v3-MaritalStatus\",",
                                "          \"code\": \"D\",",
                                "          \"display\": \"Divorced\"",
                                "        }",
                                "      ],",
                                "      \"text\": \"Divorced\"",
                                "    }",
                                "  }",
                                "}",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "*Notice how the `reference` helper was able to infer the `reference.display` value from the `Organization.name` value.*"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "## Additional patients\n\nLet's create additional patients for the other notebooks, using a transaction this time."
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "// Create a transaction builder\nconst transaction = client.transaction();\n\n// The builder exposes the same API as the client itself\n// The difference is that it does not execute right away, but instead builds a [Bundle](https://www.hl7.org/fhir/bundle.html)\n// Each operation returns a `FutureRequest` which is populated once the transaction has been sent\nconst johnColtrane = transaction.create(build(\"Patient\", { name: [{ given: [\"John\"], family: \"Coltrane\" }], gender: \"male\", }));\nconst billEvans = transaction.create(build(\"Patient\", { name: [{ given: [\"Bill\"], family: \"Evans\" }], gender: \"male\", }));\nconst ninaSimone = transaction.create(build(\"Patient\", { name: [{ given: [\"Nina\"], family: \"Simone\" }], gender: \"female\", }));\nconst oscarPetterson = transaction.create(build(\"Patient\", { name: [{ given: [\"Oscar\"], family: \"Petterson\" }], gender: \"male\", }));\n\n// Send the bundle and execute all operations\nawait transaction.send();\n\n// De-batching is done automatically - each response contains the resolved resource\nconsole.log(\n  JSON.stringify(\n    {\n      johnColtrane: johnColtrane.resource,\n      billEvans: billEvans.resource,\n      ninaSimone: ninaSimone.resource,\n      oscarPetterson: oscarPetterson.resource,\n    },\n    undefined,\n    2\n  )\n);"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "{",
                                "  \"johnColtrane\": {",
                                "    \"name\": [",
                                "      {",
                                "        \"given\": [",
                                "          \"John\"",
                                "        ],",
                                "        \"family\": \"Coltrane\"",
                                "      }",
                                "    ],",
                                "    \"gender\": \"male\",",
                                "    \"resourceType\": \"Patient\",",
                                "    \"text\": {",
                                "      \"status\": \"generated\",",
                                "      \"div\": \"<div xmlns=\\\"http://www.w3.org/1999/xhtml\\\"><ul><li><span>Gender: </span>male</li><li><span>Name: </span><ul><li>John Coltrane</li></ul></li></ul></div>\"",
                                "    },",
                                "    \"id\": \"e19e2f05-8e65-433f-b610-def2881d12c3\",",
                                "    \"meta\": {",
                                "      \"versionId\": \"ab058b96-8430-45d4-891d-00a61c74cd19\",",
                                "      \"lastUpdated\": \"2023-07-26T13:08:15.802Z\"",
                                "    }",
                                "  },",
                                "  \"billEvans\": {",
                                "    \"name\": [",
                                "      {",
                                "        \"given\": [",
                                "          \"Bill\"",
                                "        ],",
                                "        \"family\": \"Evans\"",
                                "      }",
                                "    ],",
                                "    \"gender\": \"male\",",
                                "    \"resourceType\": \"Patient\",",
                                "    \"text\": {",
                                "      \"status\": \"generated\",",
                                "      \"div\": \"<div xmlns=\\\"http://www.w3.org/1999/xhtml\\\"><ul><li><span>Gender: </span>male</li><li><span>Name: </span><ul><li>Bill Evans</li></ul></li></ul></div>\"",
                                "    },",
                                "    \"id\": \"5dabd1d7-7a7a-498b-9728-5f3fac5b2299\",",
                                "    \"meta\": {",
                                "      \"versionId\": \"75c6650d-2623-489e-ae10-66dfc886f1e0\",",
                                "      \"lastUpdated\": \"2023-07-26T13:08:15.813Z\"",
                                "    }",
                                "  },",
                                "  \"ninaSimone\": {",
                                "    \"name\": [",
                                "      {",
                                "        \"given\": [",
                                "          \"Nina\"",
                                "        ],",
                                "        \"family\": \"Simone\"",
                                "      }",
                                "    ],",
                                "    \"gender\": \"female\",",
                                "    \"resourceType\": \"Patient\",",
                                "    \"text\": {",
                                "      \"status\": \"generated\",",
                                "      \"div\": \"<div xmlns=\\\"http://www.w3.org/1999/xhtml\\\"><ul><li><span>Gender: </span>female</li><li><span>Name: </span><ul><li>Nina Simone</li></ul></li></ul></div>\"",
                                "    },",
                                "    \"id\": \"8f878d7c-0294-4409-a5af-e7f0e2e79482\",",
                                "    \"meta\": {",
                                "      \"versionId\": \"dcdfa92e-e019-4fa9-9a60-d523a026714d\",",
                                "      \"lastUpdated\": \"2023-07-26T13:08:15.821Z\"",
                                "    }",
                                "  },",
                                "  \"oscarPetterson\": {",
                                "    \"name\": [",
                                "      {",
                                "        \"given\": [",
                                "          \"Oscar\"",
                                "        ],",
                                "        \"family\": \"Petterson\"",
                                "      }",
                                "    ],",
                                "    \"gender\": \"male\",",
                                "    \"resourceType\": \"Patient\",",
                                "    \"text\": {",
                                "      \"status\": \"generated\",",
                                "      \"div\": \"<div xmlns=\\\"http://www.w3.org/1999/xhtml\\\"><ul><li><span>Gender: </span>male</li><li><span>Name: </span><ul><li>Oscar Petterson</li></ul></li></ul></div>\"",
                                "    },",
                                "    \"id\": \"e69e052d-b038-475b-b76b-064936a4f49a\",",
                                "    \"meta\": {",
                                "      \"versionId\": \"5bcfac12-17b3-4839-8b67-b0280b4a0045\",",
                                "      \"lastUpdated\": \"2023-07-26T13:08:15.830Z\"",
                                "    }",
                                "  }",
                                "}",
                                ""
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}